spiral> s1 := n -> PolyDTT(DST1(n));
(n) -> PolyDTT(DST1(n))
spiral> s1(3);
PolyDTT(DST1(3))
spiral> MatSPL(DirectSum(I(1), M(6,3)*Tensor(I(2),s1(3)),I(1)))^-1 * MatSPL(BRDFT1(8));
[ [ 1, 1, 1, 1, 1, 1, 1, 1 ], [ 1, 0, -1, 0, 0, 0, 0, 0 ], 
  [ 0, 0, 0, -1, 0, 0, 0, 1 ], [ 0, 0, 0, 0, -1, 0, 1, 0 ], 
  [ 0, 1, 0, 0, 0, 0, 0, -1 ], [ 0, 0, -1, 0, 0, 0, 1, 0 ], 
  [ 0, 0, 0, 1, 0, -1, 0, 0 ], [ 1, -1, 1, -1, 1, -1, 1, -1 ] ]
spiral> PrintMat(last);
[ [ 1, 1, 1, 1, 1, 1, 1, 1 ], 
  [ 1,  , -1,  ,  ,  ,  ,   ], 
  [  ,  ,  , -1,  ,  ,  , 1 ], 
  [  ,  ,  ,  , -1,  , 1,   ], 
  [  , 1,  ,  ,  ,  ,  , -1 ], 
  [  ,  , -1,  ,  ,  , 1,   ], 
  [  ,  ,  , 1,  , -1,  ,   ], 
  [ 1, -1, 1, -1, 1, -1, 1, -1 ] ]
spiral> 

spiral> PrintMat(MatSPL(DirectSum(I(1), M(6,3)*DirectSum(s5(3),J(3)*s5(3))))^-1 *  MatSPL(BRDFT1(7)));

[ [ 1, 1, 1, 1, 1, 1, 1 ], 
  [ 1,  , -1,  ,  ,  ,   ], 
  [  ,  ,  , -1,  ,  , 1 ], 
  [  ,  ,  ,  , -1, 1,   ], 
  [  , 1,  ,  ,  ,  , -1 ], 
  [  ,  , 1,  ,  , -1,   ], 
  [  ,  ,  , 1, -1,  ,   ] ]

s1 := n -> PolyDTT(DST1(n));
s5 := n -> PolyDTT(DST5(n));
oddB := n -> let(n1 := (n-1)/2, 
     	MatSPL(DirectSum(I(1), L(n-1,n1)*Tensor(I(2), s5(n1))))^-1 *  MatSPL(BRDFT1(n)));

evenB := n -> let(n1 := n/2-1, 
     	MatSPL(DirectSum(I(1), L(n-2,n1)*Tensor(I(2), s1(n1)), I(1)))^-1 *  MatSPL(BRDFT1(n)));

b := Mat( MatSPL(Gath(H(16,14,1,1))) * evenB(16) * MatSPL(Scat(H(16,14,1,1))) );
bb := MatSPL( Tensor(J(2), I(7)) * b^L(14,7) );

b1 := Mat(submat(bb,1,1,7));
b2 := Mat(submat(bb,8,8,7));
bsep := L(14,7) * Tensor(J(2), I(7)) * DirectSum(b1,b2) * L(14,2);

PrintMat(bb);

# Can we use type 2 transforms? Little problem, might be solvable.

spiral> MatSPL(PolyDTT(DST2(8)))^-1 * MatSPL(DirectSum(PolyDTT(DST1(7)),I(1)));
[ [ 7/8, -3/4, 5/8, -1/2, 3/8, -1/4, 1/8, 1/8 ], 
  [ 1/8, 3/4, -5/8, 1/2, -3/8, 1/4, -1/8, -1/8 ], 
  [ -1/8, 1/4, 5/8, -1/2, 3/8, -1/4, 1/8, 1/8 ], 
  [ 1/8, -1/4, 3/8, 1/2, -3/8, 1/4, -1/8, -1/8 ], 
  [ -1/8, 1/4, -3/8, 1/2, 3/8, -1/4, 1/8, 1/8 ], 
  [ 1/8, -1/4, 3/8, -1/2, 5/8, 1/4, -1/8, -1/8 ], 
  [ -1/8, 1/4, -3/8, 1/2, -5/8, 3/4, 1/8, 1/8 ], 
  [ 1/8, -1/4, 3/8, -1/2, 5/8, -3/4, 7/8, -1/8 ] ]
spiral> MatSPL(PolyDTT(DST2(8)))^-1 * MatSPL(DirectSum(PolyDTT(DST1(7)),I(1)));
[ [ 7/8, -3/4, 5/8, -1/2, 3/8, -1/4, 1/8, 1/8 ], 
  [ 1/8, 3/4, -5/8, 1/2, -3/8, 1/4, -1/8, -1/8 ], 
  [ -1/8, 1/4, 5/8, -1/2, 3/8, -1/4, 1/8, 1/8 ], 
  [ 1/8, -1/4, 3/8, 1/2, -3/8, 1/4, -1/8, -1/8 ], 
  [ -1/8, 1/4, -3/8, 1/2, 3/8, -1/4, 1/8, 1/8 ], 
  [ 1/8, -1/4, 3/8, -1/2, 5/8, 1/4, -1/8, -1/8 ], 
  [ -1/8, 1/4, -3/8, 1/2, -5/8, 3/4, 1/8, 1/8 ], 
  [ 1/8, -1/4, 3/8, -1/2, 5/8, -3/4, 7/8, -1/8 ] ]
spiral> last^-1;
[ [ 1, 1, 0, 0, 0, 0, 0, 0 ], [ 0, 1, 1, 0, 0, 0, 0, 0 ], 
  [ 0, 0, 1, 1, 0, 0, 0, 0 ], [ 0, 0, 0, 1, 1, 0, 0, 0 ], 
  [ 0, 0, 0, 0, 1, 1, 0, 0 ], [ 0, 0, 0, 0, 0, 1, 1, 0 ], 
  [ 0, 0, 0, 0, 0, 0, 1, 1 ], [ 1, -1, 1, -1, 1, -1, 1, -1 ] ]
spiral> PrintMat(last);
[ [ 1, 1,  ,  ,  ,  ,  ,   ], 
  [  , 1, 1,  ,  ,  ,  ,   ], 
  [  ,  , 1, 1,  ,  ,  ,   ], 
  [  ,  ,  , 1, 1,  ,  ,   ], 
  [  ,  ,  ,  , 1, 1,  ,   ], 
  [  ,  ,  ,  ,  , 1, 1,   ], 
  [  ,  ,  ,  ,  ,  , 1, 1 ], 
  [ 1, -1, 1, -1, 1, -1, 1, -1 ] ]
