 Pease DFT16 r=2, w=2: ", HDLVerify(streamDFTPease(16,2,2,1), RC(DFT(16)), opts), "\n"); 
 Pease DFT16 r=2, w=4: ", HDLVerify(streamDFTPease(16,2,4,1), RC(DFT(16)), opts), "\n"); 
 Pease DFT16 r=2, w=8: ", HDLVerify(streamDFTPease(16,2,8,1), RC(DFT(16)), opts), "\n"); 
 Pease DFT16 r=2, w=16: ", HDLVerify(streamDFTPease(16,2,16,1), RC(DFT(16)), opts), "\n"); 
 Pease DFT16 r=2, w=32: ", HDLVerify(streamDFTPease(16,2,32,1), RC(DFT(16)), opts), "\n"); 
 Pease DFT16 r=4, w=8: ", HDLVerify(streamDFTPease(16,4,8,1), RC(DFT(16)), opts), "\n"); 
 Pease DFT16 r=4, w=16: ", HDLVerify(streamDFTPease(16,4,16,1), RC(DFT(16)), opts), "\n"); 
 Pease DFT16 r=4, w=32: ", HDLVerify(streamDFTPease(16,4,32,1), RC(DFT(16)), opts), "\n"); 
 Fully unfolded DFT16 ", HDLVerify(streamDFTNoFold(16,1), RC(DFT(16)), opts), "\n");
 Pease DFTDR16 r=2, w=4: ", HDLVerify(streamDFTDRPease(16,2,4), RC(DFTDR(16,1,2)), opts), "\n"); 
 Pease DFTDR16 r=2, w=8: ", HDLVerify(streamDFTDRPease(16,2,8), RC(DFTDR(16, 1,2)), opts), "\n"); 
 Pease DFTDR16 r=2, w=16: ", HDLVerify(streamDFTDRPease(16,2,16), RC(DFTDR(16, 1,2)), opts), "\n"); 
 Pease DFTDR16 r=2, w=32: ", HDLVerify(streamDFTDRPease(16,2,32), RC(DFTDR(16, 1,2)), opts), "\n");
 Pease DFTDR16 r=4, w=8: ", HDLVerify(streamDFTDRPease(16,4,8), RC(DFTDR(16, 1,4)), opts), "\n"); 
 Pease DFTDR16 r=4, w=16: ", HDLVerify(streamDFTDRPease(16,4,16), RC(DFTDR(16, 1,4)), opts), "\n"); 
 Pease DFTDR16 r=4, w=32: ", HDLVerify(streamDFTDRPease(16,4,32), RC(DFTDR(16, 1,4)), opts), "\n");
 Pease DRDFT16 r=2, w=4: ", HDLVerify(streamDRDFTPease(16,2,4), RC(DRDFT(16, 1, 2)), opts), "\n"); 
 Pease DRDFT16 r=2, w=8: ", HDLVerify(streamDRDFTPease(16,2,8), RC(DRDFT(16, 1, 2)), opts), "\n"); 
 Pease DRDFT16 r=2, w=16: ", HDLVerify(streamDRDFTPease(16,2,16), RC(DRDFT(16, 1, 2)), opts), "\n"); 
 Pease DRDFT16 r=2, w=32: ", HDLVerify(streamDRDFTPease(16,2,32), RC(DRDFT(16, 1, 2)), opts), "\n"); 
 Pease DRDFT16 r=4, w=8: ", HDLVerify(streamDRDFTPease(16,4,8), RC(DRDFT(16, 1, 4)), opts), "\n"); 
 Pease DRDFT16 r=4, w=16: ", HDLVerify(streamDRDFTPease(16,4,16), RC(DRDFT(16, 1, 4)), opts), "\n"); 
 Pease DRDFT16 r=4, w=32: ", HDLVerify(streamDRDFTPease(16,4,32), RC(DRDFT(16, 1, 4)), opts), "\n"); 
 Pease DFT64 r=2, w=2: ", HDLVerify(streamDFTPease(64,2,2,1), RC(DFT(64)), opts), "\n"); 
 Pease DFT64 r=2, w=4: ", HDLVerify(streamDFTPease(64,2,4,1), RC(DFT(64)), opts), "\n"); 
 Pease DFT64 r=2, w=16: ", HDLVerify(streamDFTPease(64,2,16,1), RC(DFT(64)), opts), "\n"); 
 Pease DFT64 r=8, w=16: ", HDLVerify(streamDFTPease(64,8,16,1), RC(DFT(64)), opts), "\n"); 
 Pease DFTDR64 r=2, w=4: ", HDLVerify(streamDFTDRPease(64,2,4), RC(DFTDR(64, 1,2)), opts), "\n"); 
 Pease DFTDR64 r=2, w=16: ", HDLVerify(streamDFTDRPease(64,2,16), RC(DFTDR(64, 1,2)), opts), "\n"); 
 Pease DFTDR64 r=8, w=16: ", HDLVerify(streamDFTDRPease(64,8,16), RC(DFTDR(64, 1,8)), opts), "\n"); 
 Pease DRDFT64 r=2, w=4: ", HDLVerify(streamDRDFTPease(64,2,4), RC(DRDFT(64, 1, 2)), opts), "\n"); 
 Pease DRDFT64 r=2, w=16: ", HDLVerify(streamDRDFTPease(64,2,16), RC(DRDFT(64, 1, 2)), opts), "\n"); 
 Pease DRDFT64 r=8, w=16: ", HDLVerify(streamDRDFTPease(64,8,16), RC(DRDFT(64, 1, 8)), opts), "\n"); 
 Pease DFT16 r=2, w=4, unrolling=2: ", HDLVerify(streamDFTPease(16,2,4,2), RC(DFT(16)), opts), "\n"); 
 Pease DFT16 r=2, w=8, unrolling=2: ", HDLVerify(streamDFTPease(16,2,8,2), RC(DFT(16)), opts), "\n"); 
 Pease DFT64 r=2, w=4, unrolling=2: ", HDLVerify(streamDFTPease(64,2,4,2), RC(DFT(64)), opts), "\n"); 
 Pease DFT64 r=2, w=4, unrolling=3: ", HDLVerify(streamDFTPease(64,2,4,3), RC(DFT(64)), opts), "\n"); 
 Pease DFT64 r=8, w=16, unrolling=2: ", HDLVerify(streamDFTPease(64,8,16,2), RC(DFT(64)), opts), "\n"); 
 Streaming DFT16 r=2, w=4: ", HDLVerify(streamDFTUnroll(16,2,4), RC(DFT(16)), opts), "\n"); 
 Streaming DFT16 r=2, w=8: ", HDLVerify(streamDFTUnroll(16,2,8), RC(DFT(16)), opts), "\n"); 
 Streaming DFT16 r=2, w=16: ", HDLVerify(streamDFTUnroll(16,2,16), RC(DFT(16)), opts), "\n"); 
 Streaming DFT16 r=2, w=32: ", HDLVerify(streamDFTUnroll(16,2,32), RC(DFT(16)), opts), "\n"); 
 Streaming DFT16 r=4, w=8: ", HDLVerify(streamDFTUnroll(16,4,8), RC(DFT(16)), opts), "\n"); 
 Streaming DFT16 r=4, w=16: ", HDLVerify(streamDFTUnroll(16,4,16), RC(DFT(16)), opts), "\n"); 
 Streaming DFT16 r=4, w=32: ", HDLVerify(streamDFTUnroll(16,4,32), RC(DFT(16)), opts), "\n"); 
 Streaming DFTDR16 r=2, w=4: ", HDLVerify(streamDFTDRUnroll(16,2,4), RC(DFTDR(16, 1,2)), opts), "\n"); 
 Streaming DFTDR16 r=2, w=8: ", HDLVerify(streamDFTDRUnroll(16,2,8), RC(DFTDR(16, 1,2)), opts), "\n"); 
 Streaming DFTDR16 r=2, w=16: ", HDLVerify(streamDFTDRUnroll(16,2,16), RC(DFTDR(16, 1,2)), opts), "\n"); 
 Streaming DFTDR16 r=2, w=32: ", HDLVerify(streamDFTDRUnroll(16,2,32), RC(DFTDR(16, 1,2)), opts), "\n");  
 Streaming DFTDR16 r=4, w=8: ", HDLVerify(streamDFTDRUnroll(16,4,8), RC(DFTDR(16, 1,4)), opts), "\n"); 
 Streaming DFTDR16 r=4, w=16: ", HDLVerify(streamDFTDRUnroll(16,4,16), RC(DFTDR(16, 1,4)), opts), "\n"); 
 Streaming DRDFT16 r=2, w=4: ", HDLVerify(streamDRDFTUnroll(16,2,4), RC(DRDFT(16, 1, 2)), opts), "\n"); 
 Streaming DRDFT16 r=2, w=8: ", HDLVerify(streamDRDFTUnroll(16,2,8), RC(DRDFT(16, 1, 2)), opts), "\n"); 
 Streaming DRDFT16 r=2, w=16: ", HDLVerify(streamDRDFTUnroll(16,2,16), RC(DRDFT(16, 1, 2)), opts), "\n");  
 Streaming DRDFT16 r=2, w=32: ", HDLVerify(streamDRDFTUnroll(16,2,32), RC(DRDFT(16, 1, 2)), opts), "\n");  
 Streaming DRDFT16 r=4, w=8: ", HDLVerify(streamDRDFTUnroll(16,4,8), RC(DRDFT(16, 1, 4)), opts), "\n"); 
 Streaming DRDFT16 r=4, w=16: ", HDLVerify(streamDRDFTUnroll(16,4,16), RC(DRDFT(16, 1, 4)), opts), "\n"); 
 Streaming DFT64 r=2, w=4: ", HDLVerify(streamDFTUnroll(64,2,4), RC(DFT(64)), opts), "\n"); 
 Streaming DFT64 r=2, w=16: ", HDLVerify(streamDFTUnroll(64,2,16), RC(DFT(64)), opts), "\n"); 
 Streaming DFT64 r=8, w=16: ", HDLVerify(streamDFTUnroll(64,8,16), RC(DFT(64)), opts), "\n"); 
 Streaming DFTDR64 r=2, w=4: ", HDLVerify(streamDFTDRUnroll(64,2,4), RC(DFTDR(64, 1,2)), opts), "\n"); 
 Streaming DFTDR64 r=2, w=16: ", HDLVerify(streamDFTDRUnroll(64,2,16), RC(DFTDR(64, 1,2)), opts), "\n"); 
 Streaming DFTDR64 r=8, w=16: ", HDLVerify(streamDFTDRUnroll(64,8,16), RC(DFTDR(64, 1,8)), opts), "\n"); 
 Streaming DRDFT64 r=2, w=4: ", HDLVerify(streamDRDFTUnroll(64,2,4), RC(DRDFT(64, 1, 2)), opts), "\n"); 
 Streaming DRDFT64 r=2, w=16: ", HDLVerify(streamDRDFTUnroll(64,2,16), RC(DRDFT(64, 1, 2)), opts), "\n"); 
 Streaming DRDFT64 r=8, w=16: ", HDLVerify(streamDRDFTUnroll(64,8,16), RC(DRDFT(64, 1, 8)), opts), "\n"); 
 Pease IDFT16 r=2, w=4: ", HDLVerify(streamIDFTPease(16,2,4,1), RC(DFT(16,-1)), opts), "\n"); 
 Pease IDFT16 r=4, w=16: ", HDLVerify(streamIDFTPease(16,4,16,1), RC(DFT(16,-1)), opts), "\n"); 
 Pease IDFTDR16 r=2, w=8: ", HDLVerify(streamIDFTDRPease(16,2,8), RC(DFTDR(16, -1,2)), opts), "\n");  
 Pease DRIDFT16 r=4, w=32: ", HDLVerify(streamDRIDFTPease(16,4,32), RC(DRDFT(16, -1, 4)), opts), "\n"); 
 Pease IDFT64 r=8, w=16: ", HDLVerify(streamIDFTPease(64,8,16,1), RC(DFT(64,-1)), opts), "\n"); 
 Streaming IDFT16 r=2, w=4: ", HDLVerify(streamIDFTUnroll(16,2,4), RC(DFT(16,-1)), opts), "\n"); 
 Streaming IDFT16 r=4, w=16: ", HDLVerify(streamIDFTUnroll(16,4,16), RC(DFT(16,-1)), opts), "\n"); 
 Streaming IDFTDR16 r=2, w=8: ", HDLVerify(streamIDFTDRUnroll(16,2,8), RC(DFTDR(16, -1,2)), opts), "\n"); 
 Streaming DRIDFT16 r=4, w=16: ", HDLVerify(streamDRIDFTUnroll(16,4,16), RC(DRDFT(16, -1, 4)), opts), "\n"); 
 Streaming IDFT64 r=8, w=16: ", HDLVerify(streamIDFTUnroll(64,8,16), RC(DFT(64,-1)), opts), "\n"); 
 2D DFT(8,2,4,1,1): ", HDLVerify(stream2DDFT(8,2,4,1,1), RC(MDDFT([8,8])), opts), "\n");
 2D DFT(8,2,8,1,1): ", HDLVerify(stream2DDFT(8,2,8,1,1), RC(MDDFT([8,8])), opts), "\n");
 2D DFT(8,2,4,1,3): ", HDLVerify(stream2DDFT(8,2,4,1,3), RC(MDDFT([8,8])), opts), "\n");
 2D DFT(8,2,8,1,3): ", HDLVerify(stream2DDFT(8,2,8,1,3), RC(MDDFT([8,8])), opts), "\n");
 2D DFT(8,2,4,2,1): ", HDLVerify(stream2DDFT(8,2,4,2,1), RC(MDDFT([8,8])), opts), "\n");
 2D DFT(8,2,8,2,1): ", HDLVerify(stream2DDFT(8,2,8,2,1), RC(MDDFT([8,8])), opts), "\n");
 2D DFT(8,2,4,2,3): ", HDLVerify(stream2DDFT(8,2,4,2,3), RC(MDDFT([8,8])), opts), "\n");
 2D DFT(8,2,8,2,3): ", HDLVerify(stream2DDFT(8,2,8,2,3), RC(MDDFT([8,8])), opts), "\n");
 Streaming DFT32 r=4, w=8: ", HDLVerify(streamDFTUnroll(32,4,8), RC(DFT(32)), opts), "\n");
 Streaming DFT32 r=4, w=16: ", HDLVerify(streamDFTUnroll(32,4,16), RC(DFT(32)), opts), "\n");
 Streaming DFT32 r=4, w=32: ", HDLVerify(streamDFTUnroll(32,4,32), RC(DFT(32)), opts), "\n");
 Streaming DFT32 r=8, w=16: ", HDLVerify(streamDFTUnroll(32,8,16), RC(DFT(32)), opts), "\n");
 Streaming DFT32 r=8, w=32: ", HDLVerify(streamDFTUnroll(32,8,32), RC(DFT(32)), opts), "\n");
 Streaming DFT256 r=8, w=16: ", HDLVerify(streamDFTUnroll(256,8,16), RC(DFT(256)), opts), "\n");
 Streaming DFT256 r=8, w=32: ",HDLVerify(streamDFTUnroll(256,8,32), RC(DFT(256)), opts), "\n");
 Pease RDFT(32, 4, 4, 1): ", HDLVerify(streamRDFT(32,4,4,1,1), PkRDFT1(32,1), opts), "\n");
 Pease RDFT(32, 4, 4, 2): ", HDLVerify(streamRDFT(32,4,4,2,1), PkRDFT1(32,1), opts), "\n");
 Strm. RDFT(32, 4, 4, 4): ", HDLVerify(streamRDFT(32,4,4,4,1), PkRDFT1(32,1), opts), "\n");
 Pease RDFT(32, 4, 8, 1): ", HDLVerify(streamRDFT(32,4,8,1,1), PkRDFT1(32,1), opts), "\n");
 Pease RDFT(32, 4, 8, 2): ", HDLVerify(streamRDFT(32,4,8,2,1), PkRDFT1(32,1), opts), "\n");
 Strm. RDFT(32, 4, 8, 4): ", HDLVerify(streamRDFT(32,4,8,4,1), PkRDFT1(32,1), opts), "\n");
 Pease RDFT(32, 4, 16, 1): ", HDLVerify(streamRDFT(32,4,16,1,1), PkRDFT1(32,1), opts), "\n");
 Pease RDFT(32, 4, 16, 2): ", HDLVerify(streamRDFT(32,4,16,2,1), PkRDFT1(32,1), opts), "\n");
 Strm. RDFT(32, 4, 16, 4): ", HDLVerify(streamRDFT(32,4,16,4,1), PkRDFT1(32,1), opts), "\n");
 Pease RDFT(32, 8, 8, 1): ", HDLVerify(streamRDFT(32,8,8,1,1), PkRDFT1(32,1), opts), "\n");
 Strm. RDFT(32, 8, 8, 2): ", HDLVerify(streamRDFT(32,8,8,2,1), PkRDFT1(32,1), opts), "\n");
 Pease RDFT(32, 8, 16, 1): ", HDLVerify(streamRDFT(32,8,16,1,1), PkRDFT1(32,1), opts), "\n");
 Strm. RDFT(32, 8, 16, 2): ", HDLVerify(streamRDFT(32,8,16,2,1), PkRDFT1(32,1), opts), "\n");
 Pease RDFT(128, 4, 4, 1): ", HDLVerify(streamRDFT(128, 4, 4, 1, 1), PkRDFT1(128,1), opts), "\n");
 Pease RDFT(128, 4, 4, 3): ", HDLVerify(streamRDFT(128, 4, 4, 3, 1), PkRDFT1(128,1), opts), "\n");
 Strm. RDFT(128, 4, 4, 6): ", HDLVerify(streamRDFT(128, 4, 4, 6, 1), PkRDFT1(128,1), opts), "\n");
 Pease RDFT(128, 4, 8, 1): ", HDLVerify(streamRDFT(128, 4, 8, 1, 1), PkRDFT1(128,1), opts), "\n");
 Pease RDFT(128, 4, 8, 3): ", HDLVerify(streamRDFT(128, 4, 8, 3, 1), PkRDFT1(128,1), opts), "\n");
 Strm. RDFT(128, 4, 8, 6): ", HDLVerify(streamRDFT(128, 4, 8, 6, 1), PkRDFT1(128,1), opts), "\n");
 Pease RDFT(128, 4, 16, 1): ", HDLVerify(streamRDFT(128, 4, 16, 1, 1), PkRDFT1(128,1), opts), "\n");
 Pease RDFT(128, 4, 16, 3): ", HDLVerify(streamRDFT(128, 4, 16, 3, 1), PkRDFT1(128,1), opts), "\n");
 Strm. RDFT(128, 4, 16, 6): ", HDLVerify(streamRDFT(128, 4, 16, 6, 1), PkRDFT1(128,1), opts), "\n");
 Pease RDFT(128, 8, 8, 1): ", HDLVerify(streamRDFT(128, 8, 8, 1, 1), PkRDFT1(128,1), opts), "\n");
 Strm. RDFT(128, 8, 8, 3): ", HDLVerify(streamRDFT(128, 8, 8, 3, 1), PkRDFT1(128,1), opts), "\n");
 Pease RDFT(128, 8, 16, 1): ", HDLVerify(streamRDFT(128, 8, 16, 1, 1), PkRDFT1(128,1), opts), "\n");
 Strm. RDFT(128, 8, 16, 3): ", HDLVerify(streamRDFT(128, 8, 16, 3, 1), PkRDFT1(128,1), opts), "\n");
 Strm. RDFTSkew(32, 1/4, 4, 4): ", HDLVerify(streamRDFTSkewUnroll(32,1/4,4,4), rDFTSkew(32,1/4), opts), "\n");
 Strm. RDFTSkew(32, 1/8, 4, 8): ", HDLVerify(streamRDFTSkewUnroll(32,1/8,4,8), rDFTSkew(32,1/8), opts), "\n");
 Strm. RDFTSkew(64,0,8,8) (r8/r4): ", HDLVerify(streamRDFTSkewUnroll(64,0,8,8), rDFTSkew(64,0), opts), "\n");
 Strm. RDFTSkew(64,0,8,16) (r8/r4): ", HDLVerify(streamRDFTSkewUnroll(64,0,8,16), rDFTSkew(64,0), opts), "\n");
 Strm. RDFTSkew(256,0,16,16) (r16/r4): ", HDLVerify(streamRDFTSkewUnroll(256,0,16,16), rDFTSkew(256,0), opts), "\n");
 Strm. RDFTSkew(512,0,16,16) (r16/r8): ", HDLVerify(streamRDFTSkewUnroll(512,0,16,16), rDFTSkew(512,0), opts), "\n");
 Pease WHT(16), w=2: ", HDLVerify(streamGen(WHT(4).withTags([AStream(2)]), opts), WHT(4), opts), "\n"); 
 Pease WHT(16), w=4: ", HDLVerify(streamGen(WHT(4).withTags([AStream(4)]), opts), WHT(4), opts), "\n"); 
 Pease WHT(16), w=8: ", HDLVerify(streamGen(WHT(4).withTags([AStream(8)]), opts), WHT(4), opts), "\n"); 
 Pease WHT(16), w=16: ", HDLVerify(streamGen(WHT(4).withTags([AStream(16)]), opts), WHT(4), opts), "\n"); 
 Pease WHT(64), w=2: ", HDLVerify(streamGen(WHT(6).withTags([AStream(2)]), opts), WHT(6), opts), "\n"); 
 Streaming L(16,2), w=1: ", HDLVerify(streamGen(TL(16,2).withTags([AStream(1)]), opts), TL(16,2), opts), "\n"); 
 Streaming L(16,2), w=2: ", HDLVerify(streamGen(TL(16,2).withTags([AStream(2)]), opts), TL(16,2), opts), "\n"); 
 Streaming L(16,2), w=4: ", HDLVerify(streamGen(TL(16,2).withTags([AStream(4)]), opts), TL(16,2), opts), "\n"); 
 Streaming L(16,2), w=8: ", HDLVerify(streamGen(TL(16,2).withTags([AStream(8)]), opts), TL(16,2), opts), "\n"); 
 Streaming L(16,2), w=16: ", HDLVerify(streamGen(TL(16,2).withTags([AStream(16)]), opts), TL(16,2), opts), "\n"); 
 Streaming RC(L(16,2)), w=4: ", HDLVerify(streamGen(TRC(TL(16,2)).withTags([AStream(4)]), opts), TRC(TL(16,2)), opts), "\n"); 
 Streaming RC(L(16,2)), w=32: ", HDLVerify(streamGen(TRC(TL(16,2)).withTags([AStream(32)]), opts), TRC(TL(16,2)), opts), "\n");
 Streaming R(16,2), w=2: ", HDLVerify(streamGen(TDR(16,2).withTags([AStream(2)]), opts), TDR(16,2), opts), "\n"); 
 Streaming R(16,2), w=8: ", HDLVerify(streamGen(TDR(16,2).withTags([AStream(8)]), opts), TDR(16,2), opts), "\n"); 
 Streaming R(16,2), w=16: ", HDLVerify(streamGen(TDR(16,2).withTags([AStream(16)]), opts), TDR(16,2), opts), "\n");
 Streaming RC(R(16,2)), w=32: ", HDLVerify(streamGen(TRC(TDR(16,2)).withTags([AStream(32)]), opts), TRC(TDR(16,2)), opts), "\n");
 Streaming random perm(16), w=1: ", HDLVerify2(StreamRandomPerm(16,1), opts), "\n"); 
 Streaming random perm(16), w=2: ", HDLVerify2(StreamRandomPerm(16,2), opts), "\n"); 
 Streaming random perm(16), w=4: ", HDLVerify2(StreamRandomPerm(16,4), opts), "\n"); 
 Streaming random perm(16), w=8: ", HDLVerify2(StreamRandomPerm(16,8), opts), "\n"); 
 Streaming random perm(16), w=16: ", HDLVerify2(StreamRandomPerm(16,16), opts), "\n"); 
 Streaming random perm(20), w=2: ", HDLVerify2(StreamRandomPerm(20,2), opts), "\n"); 
 Streaming random perm(20), w=4: ", HDLVerify2(StreamRandomPerm(20,4), opts), "\n"); 
 Streaming random perm(84), w=2: ", HDLVerify2(StreamRandomPerm(84,2), opts), "\n"); 
 Streaming random perm(84), w=3: ", HDLVerify2(StreamRandomPerm(84,3), opts), "\n"); 
 Streaming random perm(84), w=4: ", HDLVerify2(StreamRandomPerm(84,4), opts), "\n"); 
 Streaming random perm(84), w=6: ", HDLVerify2(StreamRandomPerm(84,6), opts), "\n"); 
 Streaming random perm(84), w=7: ", HDLVerify2(StreamRandomPerm(84,7), opts), "\n"); 
 Streaming random perm(84), w=12: ", HDLVerify2(StreamRandomPerm(84,12), opts), "\n"); 
 Streaming random perm(84), w=14: ", HDLVerify2(StreamRandomPerm(84,14), opts), "\n"); 
 Streaming random perm(84), w=21: ", HDLVerify2(StreamRandomPerm(84,21), opts), "\n"); 
 Streaming random perm(84), w=28: ", HDLVerify2(StreamRandomPerm(84,28), opts), "\n"); 
 Pease CHS RDFT(32, 2, 4, 1): ", HDLVerify(streamRDFT(32,2,4,1,2), PkRDFT1(32,1), opts), "\n");
 Pease CHS RDFT(32, 2, 8, 1): ", HDLVerify(streamRDFT(32,2,8,1,2), PkRDFT1(32,1), opts), "\n");
 Pease CHS RDFT(32, 2, 16, 1): ", HDLVerify(streamRDFT(32,2,16,1,2), PkRDFT1(32,1), opts), "\n");
 Pease CHS RDFT(32, 2, 32, 1): ", HDLVerify(streamRDFT(32,2,32,1,2), PkRDFT1(32,1), opts), "\n");
 Pease CHS RDFT(32, 2, 4, 2): ", HDLVerify(streamRDFT(32,2,4,2,2), PkRDFT1(32,1), opts), "\n");
 Pease CHS RDFT(32, 2, 8, 2): ", HDLVerify(streamRDFT(32,2,8,2,2), PkRDFT1(32,1), opts), "\n");
 Pease CHS RDFT(32, 2, 16, 2): ", HDLVerify(streamRDFT(32,2,16,2,2), PkRDFT1(32,1), opts), "\n");
 Pease CHS RDFT(32, 2, 32, 2): ", HDLVerify(streamRDFT(32,2,32,2,2), PkRDFT1(32,1), opts), "\n");
 Strm  CHS RDFT(32, 2, 4, 4): ", HDLVerify(streamRDFT(32,2,4,4,2), PkRDFT1(32,1), opts), "\n");
 Strm  CHS RDFT(32, 2, 8, 4): ", HDLVerify(streamRDFT(32,2,8,4,2), PkRDFT1(32,1), opts), "\n");
 Strm  CHS RDFT(32, 2, 16, 4): ", HDLVerify(streamRDFT(32,2,16,4,2), PkRDFT1(32,1), opts), "\n");
 Strm  CHS RDFT(32, 2, 32, 4): ", HDLVerify(streamRDFT(32,2,32,4,2), PkRDFT1(32,1), opts), "\n");
 Pease CHS RDFT(32, 4, 8, 1): ", HDLVerify(streamRDFT(32,4,8,1,2), PkRDFT1(32,1), opts), "\n");
 Pease CHS RDFT(32, 4, 16, 1): ", HDLVerify(streamRDFT(32,4,16,1,2), PkRDFT1(32,1), opts), "\n");
 Pease CHS RDFT(32, 4, 32, 1): ", HDLVerify(streamRDFT(32,4,32,1,2), PkRDFT1(32,1), opts), "\n");
 Strm  CHS RDFT(32, 4, 8, 2): ", HDLVerify(streamRDFT(32,4,8,2,2), PkRDFT1(32,1), opts), "\n");
 Strm  CHS RDFT(32, 4, 16, 2): ", HDLVerify(streamRDFT(32,4,16,2,2), PkRDFT1(32,1), opts), "\n");
 Strm  CHS RDFT(32, 4, 32, 2): ", HDLVerify(streamRDFT(32,4,32,2,2), PkRDFT1(32,1), opts), "\n");
 Pease CHS RDFT(128, 2, 4, 1): ", HDLVerify(streamRDFT(128,2,4,1,2), PkRDFT1(128,1), opts), "\n");
 Pease CHS RDFT(128, 2, 8, 1): ", HDLVerify(streamRDFT(128,2,8,1,2), PkRDFT1(128,1), opts), "\n");
 Pease CHS RDFT(128, 2, 16, 1): ", HDLVerify(streamRDFT(128,2,16,1,2), PkRDFT1(128,1), opts), "\n");
 Pease CHS RDFT(128, 2, 32, 1): ", HDLVerify(streamRDFT(128,2,32,1,2), PkRDFT1(128,1), opts), "\n");
 Pease CHS RDFT(128, 2, 4, 2): ", HDLVerify(streamRDFT(128,2,4,2,2), PkRDFT1(128,1), opts), "\n");
 Pease CHS RDFT(128, 2, 8, 2): ", HDLVerify(streamRDFT(128,2,8,2,2), PkRDFT1(128,1), opts), "\n");
 Pease CHS RDFT(128, 2, 16, 2): ", HDLVerify(streamRDFT(128,2,16,2,2), PkRDFT1(128,1), opts), "\n");
 Pease CHS RDFT(128, 2, 32, 2): ", HDLVerify(streamRDFT(128,2,32,2,2), PkRDFT1(128,1), opts), "\n");
 Pease CHS RDFT(128, 2, 4, 3): ", HDLVerify(streamRDFT(128,2,4,3,2), PkRDFT1(128,1), opts), "\n");
 Pease CHS RDFT(128, 2, 8, 3): ", HDLVerify(streamRDFT(128,2,8,3,2), PkRDFT1(128,1), opts), "\n");
 Pease CHS RDFT(128, 2, 16, 3): ", HDLVerify(streamRDFT(128,2,16,3,2), PkRDFT1(128,1), opts), "\n");
 Pease CHS RDFT(128, 2, 32, 3): ", HDLVerify(streamRDFT(128,2,32,3,2), PkRDFT1(128,1), opts), "\n");
 Strm  CHS RDFT(128, 2, 4, 6): ", HDLVerify(streamRDFT(128,2,4,6,2), PkRDFT1(128,1), opts), "\n");
 Strm  CHS RDFT(128, 2, 8, 6): ", HDLVerify(streamRDFT(128,2,8,6,2), PkRDFT1(128,1), opts), "\n");
 Strm  CHS RDFT(128, 2, 16, 6): ", HDLVerify(streamRDFT(128,2,16,6,2), PkRDFT1(128,1), opts), "\n");
 Strm  CHS RDFT(128, 2, 32, 6): ", HDLVerify(streamRDFT(128,2,32,6,2), PkRDFT1(128,1), opts), "\n");
 Pease CHS RDFT(128, 4, 8, 1): ", HDLVerify(streamRDFT(128,4,8,1,2), PkRDFT1(128,1), opts), "\n");
 Pease CHS RDFT(128, 4, 16, 1): ", HDLVerify(streamRDFT(128,4,16,1,2), PkRDFT1(128,1), opts), "\n");
 Pease CHS RDFT(128, 4, 32, 1): ", HDLVerify(streamRDFT(128,4,32,1,2), PkRDFT1(128,1), opts), "\n");
 Strm  CHS RDFT(128, 4, 8, 3): ", HDLVerify(streamRDFT(128,4,8,3,2), PkRDFT1(128,1), opts), "\n");
 Strm  CHS RDFT(128, 4, 16, 3): ", HDLVerify(streamRDFT(128,4,16,3,2), PkRDFT1(128,1), opts), "\n");
 Strm  CHS RDFT(128, 4, 32, 3): ", HDLVerify(streamRDFT(128,4,32,3,2), PkRDFT1(128,1), opts), "\n");
 Pease CHS RDFT(128, 8, 16, 1): ", HDLVerify(streamRDFT(128,8,16,1,2), PkRDFT1(128,1), opts), "\n");
 Pease CHS RDFT(128, 8, 32, 1): ", HDLVerify(streamRDFT(128,8,32,1,2), PkRDFT1(128,1), opts), "\n");
 Strm  CHS RDFT(128, 8, 16, 2): ", HDLVerify(streamRDFT(128,8,16,2,2), PkRDFT1(128,1), opts), "\n");
 Strm  CHS RDFT(128, 8, 32, 2): ", HDLVerify(streamRDFT(128,8,32,2,2), PkRDFT1(128,1), opts), "\n");
# Strm. RDFTSkew(64,1/4,8,8) (r8/r4): ", HDLVerify(streamRDFTSkewUnroll(64,1/4,8,8), rDFTSkew(64,1/4), opts), "\n");
# Strm. RDFTSkew(64,1/4,8,16) (r8/r4): ", HDLVerify(streamRDFTSkewUnroll(64,1/4,8,16), rDFTSkew(64,1/4), opts), "\n");
# Strm. RDFTSkew(256,1/4,16,16) (r16/r4): ", HDLVerify(streamRDFTSkewUnroll(256,1/4,16,16), rDFTSkew(256,1/4), opts), "\n");
# Strm. RDFTSkew(512,1/4,16,16) (r16/r8): ", HDLVerify(streamRDFTSkewUnroll(512,1/4,16,16), rDFTSkew(512,1/4), opts), "\n");
 Bluestein DFT7 r=2, w=4, dout=1, din=1: ", HDLVerify(streamBluesteinDFT(7,2,4,1,1), RC(DFT(7)), opts), "\n"); 
 Bluestein DFT7 r=2, w=4, dout=1, din=2: ", HDLVerify(streamBluesteinDFT(7,2,4,1,2), RC(DFT(7)), opts), "\n"); 
 Bluestein DFT7 r=2, w=4, dout=1, din=4: ", HDLVerify(streamBluesteinDFT(7,2,4,1,4), RC(DFT(7)), opts), "\n"); 
 Bluestein DFT7 r=2, w=4, dout=2, din=1: ", HDLVerify(streamBluesteinDFT(7,2,4,2,1), RC(DFT(7)), opts), "\n"); 
 Bluestein DFT7 r=2, w=4, dout=2, din=2: ", HDLVerify(streamBluesteinDFT(7,2,4,2,2), RC(DFT(7)), opts), "\n"); 
 Bluestein DFT7 r=2, w=4, dout=2, din=4: ", HDLVerify(streamBluesteinDFT(7,2,4,2,4), RC(DFT(7)), opts), "\n"); 
 Bluestein DFT7 r=2, w=8, dout=1, din=1: ", HDLVerify(streamBluesteinDFT(7,2,8,1,1), RC(DFT(7)), opts), "\n"); 
 Bluestein DFT7 r=2, w=8, dout=1, din=2: ", HDLVerify(streamBluesteinDFT(7,2,8,1,2), RC(DFT(7)), opts), "\n"); 
 Bluestein DFT7 r=2, w=8, dout=1, din=4: ", HDLVerify(streamBluesteinDFT(7,2,8,1,4), RC(DFT(7)), opts), "\n"); 
 Bluestein DFT7 r=2, w=8, dout=2, din=1: ", HDLVerify(streamBluesteinDFT(7,2,8,2,1), RC(DFT(7)), opts), "\n"); 
 Bluestein DFT7 r=2, w=8, dout=2, din=2: ", HDLVerify(streamBluesteinDFT(7,2,8,2,2), RC(DFT(7)), opts), "\n"); 
 Bluestein DFT7 r=2, w=8, dout=2, din=4: ", HDLVerify(streamBluesteinDFT(7,2,8,2,4), RC(DFT(7)), opts), "\n"); 
 Bluestein DFT7 r=2, w=16, dout=1, din=1: ", HDLVerify(streamBluesteinDFT(7,2,16,1,1), RC(DFT(7)), opts), "\n"); 
 Bluestein DFT7 r=2, w=16, dout=1, din=2: ", HDLVerify(streamBluesteinDFT(7,2,16,1,2), RC(DFT(7)), opts), "\n"); 
 Bluestein DFT7 r=2, w=16, dout=1, din=4: ", HDLVerify(streamBluesteinDFT(7,2,16,1,4), RC(DFT(7)), opts), "\n"); 
 Bluestein DFT7 r=2, w=16, dout=2, din=1: ", HDLVerify(streamBluesteinDFT(7,2,16,2,1), RC(DFT(7)), opts), "\n"); 
 Bluestein DFT7 r=2, w=16, dout=2, din=2: ", HDLVerify(streamBluesteinDFT(7,2,16,2,2), RC(DFT(7)), opts), "\n"); 
 Bluestein DFT7 r=2, w=16, dout=2, din=4: ", HDLVerify(streamBluesteinDFT(7,2,16,2,4), RC(DFT(7)), opts), "\n"); 
 Bluestein DFT7 r=4, w=8, dout=1, din=1: ", HDLVerify(streamBluesteinDFT(7,4,8,1,1), RC(DFT(7)), opts), "\n"); 
 Bluestein DFT7 r=4, w=8, dout=1, din=2: ", HDLVerify(streamBluesteinDFT(7,4,8,1,2), RC(DFT(7)), opts), "\n"); 
 Bluestein DFT7 r=4, w=8, dout=2, din=1: ", HDLVerify(streamBluesteinDFT(7,4,8,2,1), RC(DFT(7)), opts), "\n"); 
 Bluestein DFT7 r=4, w=8, dout=2, din=2: ", HDLVerify(streamBluesteinDFT(7,4,8,2,2), RC(DFT(7)), opts), "\n"); 
 Bluestein DFT7 r=4, w=16, dout=1, din=1: ", HDLVerify(streamBluesteinDFT(7,4,16,1,1), RC(DFT(7)), opts), "\n"); 
 Bluestein DFT7 r=4, w=16, dout=1, din=2: ", HDLVerify(streamBluesteinDFT(7,4,16,1,2), RC(DFT(7)), opts), "\n"); 
 Bluestein DFT7 r=4, w=16, dout=2, din=1: ", HDLVerify(streamBluesteinDFT(7,4,16,2,1), RC(DFT(7)), opts), "\n"); 
 Bluestein DFT7 r=4, w=16, dout=2, din=2: ", HDLVerify(streamBluesteinDFT(7,4,16,2,2), RC(DFT(7)), opts), "\n"); 
 Mixed-Radix DFT48 r=2, w=12, d=1: ", HDLVerify(streamDFTPease(48, 2, 12, 1), RC(DFT(48)), opts), "\n");
 Mixed-Radix DFT48 r=2, w=24, d=1: ", HDLVerify(streamDFTPease(48, 2, 24, 1), RC(DFT(48)), opts), "\n");
 Mixed-Radix DFT48 r=2, w=48, d=1: ", HDLVerify(streamDFTPease(48, 2, 48, 1), RC(DFT(48)), opts), "\n");
 Mixed-Radix DFT48 r=4, w=24, d=1: ", HDLVerify(streamDFTPease(48, 4, 24, 1), RC(DFT(48)), opts), "\n");
 Mixed-Radix DFT48 r=4, w=48, d=1: ", HDLVerify(streamDFTPease(48, 4, 48, 1), RC(DFT(48)), opts), "\n");
 Mixed-Radix DFT48 r=2, w=12, d=4: ", HDLVerify(streamDFTUnroll(48, 2, 12), RC(DFT(48)), opts), "\n");
 Mixed-Radix DFT48 r=2, w=24, d=4: ", HDLVerify(streamDFTUnroll(48, 2, 24), RC(DFT(48)), opts), "\n");
 Mixed-Radix DFT48 r=2, w=48, d=4: ", HDLVerify(streamDFTUnroll(48, 2, 48), RC(DFT(48)), opts), "\n");
 Mixed-Radix DFT48 r=4, w=24, d=4: ", HDLVerify(streamDFTUnroll(48, 4, 24), RC(DFT(48)), opts), "\n");
 Mixed-Radix DFT48 r=4, w=48, d=4: ", HDLVerify(streamDFTUnroll(48, 4, 48), RC(DFT(48)), opts), "\n");
 Pease DFT27 r=3, w=6: ", HDLVerify(streamDFTPease(27,3,6,1), RC(DFT(27)), opts), "\n"); 
 Pease DFT27 r=3, w=18: ", HDLVerify(streamDFTPease(27,3,18,1), RC(DFT(27)), opts), "\n"); 
 Pease DFT81 r=3, w=6, d=1: ", HDLVerify(streamDFTPease(81,3,6,1), RC(DFT(81)), opts), "\n"); 
 Pease DFT81 r=3, w=18, d=1: ", HDLVerify(streamDFTPease(81,3,18,1), RC(DFT(81)), opts), "\n"); 
 Pease DFT81 r=3, w=54, d=1: ", HDLVerify(streamDFTPease(81,3,54,1), RC(DFT(81)), opts), "\n"); 
 Pease DFT81 r=3, w=6, d=2: ", HDLVerify(streamDFTPease(81,3,6,2), RC(DFT(81)), opts), "\n"); 
 Pease DFT81 r=3, w=18, d=2: ", HDLVerify(streamDFTPease(81,3,18,2), RC(DFT(81)), opts), "\n"); 
 Pease DFT81 r=3, w=54, d=2: ", HDLVerify(streamDFTPease(81,3,54,2), RC(DFT(81)), opts), "\n"); 
 Pease DFT81 r=9, w=18, d=1: ", HDLVerify(streamDFTPease(81,9,18,1), RC(DFT(81)), opts), "\n"); 
 Pease DFT81 r=9, w=54, d=1: ", HDLVerify(streamDFTPease(81,9,54,1), RC(DFT(81)), opts), "\n"); 
 Streaming DFT27 r=3, w=6: ", HDLVerify(streamDFTUnroll(27,3,6), RC(DFT(27)), opts), "\n"); 
 Streaming DFT27 r=3, w=18: ", HDLVerify(streamDFTUnroll(27,3,18), RC(DFT(27)), opts), "\n"); 
 Streaming DFT81 r=3, w=6: ", HDLVerify(streamDFTUnroll(81,3,6), RC(DFT(81)), opts), "\n"); 
 Streaming DFT81 r=3, w=18: ", HDLVerify(streamDFTUnroll(81,3,18), RC(DFT(81)), opts), "\n"); 
 Streaming DFT81 r=3, w=54: ", HDLVerify(streamDFTUnroll(81,3,54), RC(DFT(81)), opts), "\n"); 
 Streaming DFT81 r=9, w=18: ", HDLVerify(streamDFTUnroll(81,9,18), RC(DFT(81)), opts), "\n"); 
 Streaming DFT81 r=9, w=54: ", HDLVerify(streamDFTUnroll(81,9,54), RC(DFT(81)), opts), "\n"); 
 Streaming IxL(16,2), w=1: ", HDLVerify(streamGen(TL(16,2,4,1).withTags([AStream(1)]), opts), TL(16,2,4,1), opts), "\n"); 
 Streaming IxL(16,2), w=2: ", HDLVerify(streamGen(TL(16,2,4,1).withTags([AStream(2)]), opts), TL(16,2,4,1), opts), "\n"); 
 Streaming IxL(16,2), w=4: ", HDLVerify(streamGen(TL(16,2,4,1).withTags([AStream(4)]), opts), TL(16,2,4,1), opts), "\n"); 
 Streaming IxL(16,2), w=8: ", HDLVerify(streamGen(TL(16,2,4,1).withTags([AStream(8)]), opts), TL(16,2,4,1), opts), "\n"); 
 Streaming IxL(16,2), w=16: ", HDLVerify(streamGen(TTensorI(TPrm(L(16,2)), 4, APar, APar).withTags([AStream(16)]), opts), TL(16,2,4,1), opts), "\n"); 
 Streaming IxRC(L(16,2)), w=4: ", HDLVerify(streamGen(TRC(TL(16,2,4,1)).withTags([AStream(4)]), opts), TRC(TL(16,2,4,1)), opts), "\n");
 Streaming IxRC(L(16,2)), w=32: ", HDLVerify(streamGen(TRC(TTensorI(TPrm(L(16,2)), 4, APar, APar)).withTags([AStream(32)]), opts), TRC(TL(16,2,4,1)), opts), "\n");
 Streaming IxR(16,2), w=2: ", HDLVerify(streamGen(TTensorI(TDR(16,2), 4, APar, APar).withTags([AStream(2)]), opts), TTensorI(TDR(16,2),4, APar, APar), opts), "\n"); 
 Streaming IxR(16,2), w=8: ", HDLVerify(streamGen(TTensorI(TDR(16,2), 4, APar, APar).withTags([AStream(8)]), opts), TTensorI(TDR(16,2),4,APar,APar), opts), "\n"); 
 Streaming IxR(16,2), w=16: ", HDLVerify(streamGen(TTensorI(TPrm(DR(16,2)), 4, APar, APar).withTags([AStream(16)]), opts), TTensorI(TDR(16,2),4,APar,APar), opts), "\n");
 Streaming IxRC(R(16,2)), w=32: ", HDLVerify(streamGen(TRC(TTensorI(TPrm(DR(16,2)), 4, APar, APar)).withTags([AStream(32)]), opts), TRC(TTensorI(TPrm(DR(16,2)), 4, APar, APar)), opts), "\n");
 Streaming I x random perm(16), w=1: ", HDLVerify2(STensor(StreamRandomPerm(16,1),4,1), opts), "\n"); 
 Streaming I x random perm(16), w=2: ", HDLVerify2(STensor(StreamRandomPerm(16,2),4,2), opts), "\n"); 
 Streaming I x random perm(16), w=4: ", HDLVerify2(STensor(StreamRandomPerm(16,4),4,4), opts), "\n"); 
 Streaming I x random perm(16), w=8: ", HDLVerify2(STensor(StreamRandomPerm(16,8),4,8), opts), "\n"); 
 Streaming I x random perm(16), w=16: ", HDLVerify2(STensor(StreamRandomPerm(16,16),4,16), opts), "\n"); 
 Streaming I x random perm(20), w=2: ", HDLVerify2(STensor(StreamRandomPerm(20,2),4,2), opts), "\n"); 
 Streaming I x random perm(20), w=4: ", HDLVerify2(STensor(StreamRandomPerm(20,4),4,4), opts), "\n"); 
 Streaming I x random perm(84), w=2: ", HDLVerify2(STensor(StreamRandomPerm(84,2),4,2), opts), "\n"); 
 Streaming I x random perm(84), w=3: ", HDLVerify2(STensor(StreamRandomPerm(84,3),4,3), opts), "\n"); 
 Streaming I x random perm(84), w=4: ", HDLVerify2(STensor(StreamRandomPerm(84,4),4,4), opts), "\n"); 
 Streaming I x random perm(84), w=6: ", HDLVerify2(STensor(StreamRandomPerm(84,6),4,6), opts), "\n"); 
 Streaming I x random perm(84), w=7: ", HDLVerify2(STensor(StreamRandomPerm(84,7),4,7), opts), "\n"); 
 Streaming I x random perm(84), w=12: ", HDLVerify2(STensor(StreamRandomPerm(84,12),4,12), opts), "\n"); 
 Streaming I x random perm(84), w=14: ", HDLVerify2(STensor(StreamRandomPerm(84,14),4,14), opts), "\n"); 
 Streaming I x random perm(84), w=21: ", HDLVerify2(STensor(StreamRandomPerm(84,21),4,21), opts), "\n"); 
 Streaming I x random perm(84), w=28: ", HDLVerify2(STensor(StreamRandomPerm(84,28),4,28), opts), "\n"); 
